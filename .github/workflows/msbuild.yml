name: Build and release store

on:
  workflow_dispatch: {}
  push:
    branches:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    permissions:
      packages: read
      contents: read
    runs-on: windows-latest
    env:
        BUILD_CONFIGURATION: ReleaseSecure
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    # - name: Setup NUGET
    #   uses: nuget/setup-nuget@v2
    #   with:
    #     nuget-version: '5.x'

    - name: Prepare signing of modules by exporting secret to file
      shell: pwsh
      working-directory: ${{env.GITHUB_WORKSPACE}}
      env:
        UCP3_SIGNING_CERTIFICATE_CONTENTS: ${{ secrets.UCP3_SIGNING_CERTIFICATE_CONTENTS }}
      run: |
        Set-Content -Value "$env:UCP3_SIGNING_CERTIFICATE_CONTENTS" -Path "$($env:GITHUB_WORKSPACE)\ucp3-module-signing-key.pem" -Force

    - name: Build store
      shell: |
        pwsh -noninteractive -command "try {{ $ErrorActionPreference='Stop'; . '{0}' }} catch {{ Write-Error ""FAILED: $_""; throw; }} if ((Test-Path -LiteralPath variable:\LASTEXITCODE)) {{ exit $LASTEXITCODE }}"
      env:
        UCP3_NUGET_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GH_TOKEN: ${{ github.token }}
      run: |
        .\scripts\build-store.ps1 -NugetToken "$env:UCP3_NUGET_TOKEN" -Certificate "$($env:GITHUB_WORKSPACE)\ucp3-module-signing-key.pem"

    - name: Release store
      shell: |
        pwsh -noninteractive -command "try {{ $ErrorActionPreference='Stop'; . '{0}' }} catch {{ Write-Error ""FAILED: $_""; throw; }} if ((Test-Path -LiteralPath variable:\LASTEXITCODE)) {{ exit $LASTEXITCODE }}"
      env:
        UCP3_NUGET_TOKEN: ${{ secrets.UCP3_READ_PACKAGES }}
        GH_TOKEN: ${{ github.token }}
      run: |
        .\scripts\create-release.ps1
